package br.com.economy.servlet;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.core.Context;

import org.jboss.logging.annotations.Param;

import br.com.economy.DAO.TransactionDAO;
import br.com.economy.DAO.UserDao;
import br.com.economy.entities.Transacao;

@Path("/transaction")
public class Transaction {

	TransactionDAO transacaoDAO = new TransactionDAO();
	UserDao usuarioDAO =  new UserDao();
	
	@POST
	public void setTransaction(@PathParam("description") String description, @PathParam("value") float value,
			@PathParam("date_transaction") String date_transactionString, @PathParam("category") int category,
			@PathParam("subactegory") int subcategory, @Context HttpServletRequest request,
			@Context HttpServletResponse response) throws IOException {

		Date date_register = new Date();
		Date date_transaction = new Date();
		int userId=0;

		Cookie cookies[] = request.getCookies();
		if (cookies != null)
		{
			
			for(Cookie cookie : cookies){
			    if("userId".equals(cookie.getName())){
			        userId = Integer.parseInt(cookie.getValue());
			    }
			}
			System.out.println("user =" + userId);

			try 
			{
				SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");			
				date_transaction = sdf.parse(date_transactionString);

				persistOnDataBase(value,date_transaction, date_register, description,subcategory,userId, category);

			} 
			catch (ParseException e) 
			{
				e.printStackTrace();
			}
		}
		else
		{
			response.sendRedirect("../html/index.html");
		}
	}

	private void persistOnDataBase(float value,Date date_transaction,Date date_register,
			String description, int subcategory,int user, int category) {

		// set the object transaction
		Transacao transaction = new Transacao();
		transaction.setValor(value);
		transaction.setDataTransacao(date_transaction);
		transaction.setDataRegistro(date_register);
		transaction.setDescricao(description);
		transaction.setSubcategoriaId(subcategory);
		//instanciar objeto subcategoria com dados do banco para setar este atributo 
		transaction.setUsuarioId(user);
		//System.out.println("lets go insert");
		
		//persist on data base
		if(transacaoDAO.verifyCategory(category)){		//true = +
			usuarioDAO.setTotalMore(value, user);
		}
		else{
			usuarioDAO.setTotalMinus(value, user);
		}
		//persist on data base
		transacaoDAO.Insert(transaction);

	}

	public Transaction() {
		super();

	}
}
